<div class="container mt-5">
    <h1>{{producto.nombre}}</h1>
    <p><strong>Precio:</strong> ${{producto.precio}}</p>
    <p><strong>Características:</strong></p>
    <ul>
        {{#each producto.caracteristicas}}
            <li>{{@key}}: {{this}}</li>
        {{/each}}
    </ul>
    <!-- Botón para iniciar el soporte IA -->
    <button class="btn btn-primary" id="open-support" data-product-nombre="{{producto.nombre}}">Soporte IA</button>
    <br><br>
    <a href="/products" class="btn btn-secondary">Volver a productos</a>
    <br><br><br>
    <div class="modal fade" id="chatModal" tabindex="-1" aria-labelledby="chatModalLabel" aria-hidden="true">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="chatModalLabel">Chat de Soporte IA</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    <div id="chat-box" class="mb-3" style="height: 300px; overflow-y: scroll; border: 1px solid #ccc; padding: 10px;">
                        <!-- Aquí aparecerán los mensajes del chat -->
                    </div>
                    <div class="input-group">
                        <input type="text" id="chat-input" class="form-control" placeholder="Escribe tu pregunta...">
                        <button class="btn btn-primary" id="send-chat">Enviar</button>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<script>
    let productoInfo = {};  // Variable global para almacenar la información del producto

    // Evento para abrir el modal y capturar el producto
    document.addEventListener('DOMContentLoaded', function() {
        const soporteButton = document.getElementById('open-support');

        soporteButton.addEventListener('click', function() {
            const chatModal = new bootstrap.Modal(document.getElementById('chatModal'));
            chatModal.show();

            // Captura el valor de "data-product-nombre"
            const productoNombre = this.getAttribute('data-product-nombre');

            // Guardamos el nombre del producto en la variable global productoInfo
            productoInfo = {
                nombre: productoNombre || 'Producto desconocido',
            };

            // Mensaje de bienvenida en el chat
            const chatBox = document.getElementById('chat-box');
            const welcomeMessage = document.createElement('div');
            welcomeMessage.textContent = `IA: ¡Hola! Soy el asistente de soporte de Ultrix. Estoy aquí para ayudarte con cualquier duda sobre el producto "${productoInfo.nombre}".`;
            chatBox.appendChild(welcomeMessage);
        });
    });

    // Evento para enviar el mensaje al backend y recibir la respuesta de la IA
    document.getElementById('send-chat').addEventListener('click', function() {
        const input = document.getElementById('chat-input');
        const chatBox = document.getElementById('chat-box');

        // Agregar el mensaje del usuario al chat
        const userMessage = document.createElement('div');
        userMessage.textContent = `Tú: ${input.value}`;
        chatBox.appendChild(userMessage);

        // Enviar la pregunta a la IA junto con la información del producto
        fetch('/products/soporte-ia', {
            method: 'POST',
            headers: { 'Content-Type': 'application/json' },
            body: JSON.stringify({ message: input.value, producto: productoInfo })
        })
        .then(response => response.json())
        .then(data => {
            // Mostrar la respuesta de la IA en el chat
            const iaMessage = document.createElement('div');
            iaMessage.textContent = `IA: ${data.response}`;
            chatBox.appendChild(iaMessage);
            chatBox.scrollTop = chatBox.scrollHeight;  // Desplazarse hacia abajo para ver el mensaje
        })
        .catch(err => {
            console.error('Error al comunicarse con la IA:', err);
        });

        input.value = '';  // Limpiar el input después de enviar
    });
</script>